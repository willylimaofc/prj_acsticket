{
  "stats": {
    "suites": 1,
    "tests": 44,
    "passes": 33,
    "pending": 0,
    "failures": 11,
    "start": "2025-06-26T19:40:36.042Z",
    "end": "2025-06-26T19:56:10.662Z",
    "duration": 934620,
    "testsRegistered": 44,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b919c323-e5a2-46b3-a8d4-cf4d1a027e4a",
      "title": "",
      "fullFile": "cypress/e2e/criar-ticket.cy.js",
      "file": "cypress/e2e/criar-ticket.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8cbb7f75-fd48-40e5-af68-638f458014bd",
          "title": "Autenticar",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cria ticket - IT & Technical Support > Bug Report > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Bug Report > 🟢 Low",
              "timedOut": null,
              "duration": 18257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "3ebf40b5-22c4-4543-9175-ea85c13ea320",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Bug Report > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Bug Report > 🟡 Medium",
              "timedOut": null,
              "duration": 19129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "95a96990-4641-4e0a-9594-813e79cc825d",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Bug Report > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Bug Report > 🟠 High",
              "timedOut": null,
              "duration": 17088,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "b1629ff6-f8bf-4bff-83f8-f0b89ffe771e",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Bug Report > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Bug Report > 🔴 Critical",
              "timedOut": null,
              "duration": 21368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "c3fdf6c0-d4a0-4d34-9351-f0f3942a1084",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🟢 Low",
              "timedOut": null,
              "duration": 20869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "72ab8ab7-de47-40d2-87c7-1c7f46f63caa",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🟡 Medium",
              "timedOut": null,
              "duration": 17602,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "2b94a801-0e79-4832-9e25-705181db8b38",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🟠 High",
              "timedOut": null,
              "duration": 17939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "ba4acac7-277e-4c32-9874-42ff5b27822b",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Desktop/Workstation > 🔴 Critical",
              "timedOut": null,
              "duration": 16387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "f7675b4f-f2b5-4d36-80bb-53681258f888",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Feature Request > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Feature Request > 🟢 Low",
              "timedOut": null,
              "duration": 18153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "3acb49f6-7938-415c-bf13-65efdc70ca05",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Feature Request > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Feature Request > 🟡 Medium",
              "timedOut": null,
              "duration": 16805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "c3fbd6ad-539e-4605-af22-754e606eedf3",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Feature Request > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Feature Request > 🟠 High",
              "timedOut": null,
              "duration": 16870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "8af5ed65-843e-4059-addf-d352192916bd",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Feature Request > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Feature Request > 🔴 Critical",
              "timedOut": null,
              "duration": 16412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "a2859f9b-f95e-471b-bf77-4f648e923d72",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Laptop > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Laptop > 🟢 Low",
              "timedOut": null,
              "duration": 17261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "09fecbfc-7b63-414a-837e-3ac48b482512",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Laptop > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Laptop > 🟡 Medium",
              "timedOut": null,
              "duration": 17340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "4a275366-07b4-4f01-818f-b8452c8b27c7",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Laptop > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Laptop > 🟠 High",
              "timedOut": null,
              "duration": 17382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "e30e07e4-5a05-4ab5-86e0-36a1b53fb7f3",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Laptop > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Laptop > 🔴 Critical",
              "timedOut": null,
              "duration": 17460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "b74a155e-bd40-429d-9d02-28d001fe02e7",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Account Issues > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Account Issues > 🟢 Low",
              "timedOut": null,
              "duration": 30511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:125:65)",
                "diff": null
              },
              "uuid": "d1b990fa-2c19-4f37-9502-fcc8cbeea035",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Account Issues > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Account Issues > 🟡 Medium",
              "timedOut": null,
              "duration": 16281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "6cffaccb-ca24-494c-aea8-0e3547cde808",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Account Issues > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Account Issues > 🟠 High",
              "timedOut": null,
              "duration": 16658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "60c5deb4-6272-4403-8da0-b8c7f3682cc9",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Account Issues > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Account Issues > 🔴 Critical",
              "timedOut": null,
              "duration": 30976,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:125:65)",
                "diff": null
              },
              "uuid": "e24d6cb4-650e-4beb-a30b-b31d729a8256",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Server > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Server > 🟢 Low",
              "timedOut": null,
              "duration": 17242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "4bd9b368-7309-46ac-b708-d8940be8157e",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Server > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Server > 🟡 Medium",
              "timedOut": null,
              "duration": 30307,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:125:65)",
                "diff": null
              },
              "uuid": "f92f275f-7cb7-4887-85a0-5947a3529820",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Server > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Server > 🟠 High",
              "timedOut": null,
              "duration": 18504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "1dd82555-923a-43c7-80b9-47d93325441a",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Server > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Server > 🔴 Critical",
              "timedOut": null,
              "duration": 23051,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "0619553c-9f8b-436e-86fa-47bdc3464ae2",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🟢 Low",
              "timedOut": null,
              "duration": 33310,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:125:65)",
                "diff": null
              },
              "uuid": "0c00e3e3-6eea-45e4-b948-da18b3423fbf",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🟡 Medium",
              "timedOut": null,
              "duration": 25381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "b741b9fa-be4f-4653-97e7-4160f23bef76",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🟠 High",
              "timedOut": null,
              "duration": 28488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 20050ms: `cy.click()` failed because this element is `disabled`:\n\n`<button type=\"button\" role=\"combobox\" aria-controls=\"radix-:ru:\" aria-expanded=\"false\" aria-autocomplete=\"none\" dir=\"ltr\" data-state=\"closed\" disabled=\"\" data-disabled=\"\" data-placeholder=\"\" class=\"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&amp;>span]:line-clamp-1 mt-1\">...</button>`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 20050ms: `cy.click()` failed because this element is `disabled`:\n\n`<button type=\"button\" role=\"combobox\" aria-controls=\"radix-:ru:\" aria-expanded=\"false\" aria-autocomplete=\"none\" dir=\"ltr\" data-state=\"closed\" disabled=\"\" data-disabled=\"\" data-placeholder=\"\" class=\"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&amp;>span]:line-clamp-1 mt-1\">...</button>`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at Object.isNotDisabled (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:148336:58)\n    at runAllChecks (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:114714:26)\n    at retryActionability (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:114803:16)\n    at tryCatcher (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:147197:68)\n    at <unknown> (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:147138:14)\n    at tryCatcher (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (https://acsticket.vercel.app/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "fbad01b9-b31d-432b-a3a6-e6091843af98",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Printer/Scanner > 🔴 Critical",
              "timedOut": null,
              "duration": 17670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "1c9c3b8c-bc68-42e3-b94b-1e10f8dec029",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🟢 Low",
              "timedOut": null,
              "duration": 18008,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "93d99418-54a0-4f78-8de2-cf8da9d2b543",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🟡 Medium",
              "timedOut": null,
              "duration": 17619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "a50a31fe-8574-4e75-a3ee-cad5c9344ac4",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🟠 High",
              "timedOut": null,
              "duration": 21337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "58bc2b99-3ce7-47b5-9e1b-12a8117051b9",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - IT & Technical Support > Hardware - Mobile Device > 🔴 Critical",
              "timedOut": null,
              "duration": 18947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "1b44bc92-1d19-42cb-a2c0-4236cfaafb70",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Employee Offboarding > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Employee Offboarding > 🟢 Low",
              "timedOut": null,
              "duration": 24819,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:69:36)",
                "diff": null
              },
              "uuid": "68183fca-f9e8-403a-8008-6ded60339241",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Employee Offboarding > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Employee Offboarding > 🟡 Medium",
              "timedOut": null,
              "duration": 25620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:69:36)",
                "diff": null
              },
              "uuid": "5e341f35-7e08-4843-8be7-851a5a16869a",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Employee Offboarding > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Employee Offboarding > 🟠 High",
              "timedOut": null,
              "duration": 24170,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:69:36)",
                "diff": null
              },
              "uuid": "bc7a9c4c-1420-40b7-a520-c1056338a1b5",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Employee Offboarding > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Employee Offboarding > 🔴 Critical",
              "timedOut": null,
              "duration": 24373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Employee Offboarding' within the element: <div.relative.flex.w-full.cursor-default.select-none.items-center.rounded-sm.py-1.5.pl-8.pr-2.text-sm.outline-none.focus:bg-accent.focus:text-accent-foreground.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50> but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:69:36)",
                "diff": null
              },
              "uuid": "19fb41d1-2081-41cf-a51b-6bb6d1f0181b",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Forgot my password > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Forgot my password > 🟢 Low",
              "timedOut": null,
              "duration": 19436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "c8a48cc5-d31a-447f-a1e0-899b48d20b3b",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Forgot my password > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Forgot my password > 🟡 Medium",
              "timedOut": null,
              "duration": 18938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "d4d81f76-30fe-4182-8803-12cbec19c490",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Forgot my password > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Forgot my password > 🟠 High",
              "timedOut": null,
              "duration": 17210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "2fba6ad2-0a94-4210-a170-42361e53f2ed",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Forgot my password > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Forgot my password > 🔴 Critical",
              "timedOut": null,
              "duration": 35147,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:125:65)",
                "diff": null
              },
              "uuid": "ed46821a-5a71-4d84-bc2a-ca499ef68d8e",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Multi factor authentication > 🟢 Low",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Multi factor authentication > 🟢 Low",
              "timedOut": null,
              "duration": 30883,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'Novo ticket criado:' but never did.\n    at Context.eval (webpack://prj_acsticket/./cypress/e2e/criar-ticket.cy.js:125:65)",
                "diff": null
              },
              "uuid": "89b39852-0253-44cd-9de8-fae5945e3a31",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Multi factor authentication > 🟡 Medium",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Multi factor authentication > 🟡 Medium",
              "timedOut": null,
              "duration": 19649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "2a12436d-c9d1-43f1-b8c2-3acedf59a4f1",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Multi factor authentication > 🟠 High",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Multi factor authentication > 🟠 High",
              "timedOut": null,
              "duration": 19065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "3128ec88-8b2e-4300-891a-9958aa9d61a0",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cria ticket - Users & Passwords > Multi factor authentication > 🔴 Critical",
              "fullTitle": "Autenticar Cria ticket - Users & Passwords > Multi factor authentication > 🔴 Critical",
              "timedOut": null,
              "duration": 17737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Entrar em novo ticket\ncy.contains('Criar Ticket').click();\ncy.get('input[id=\"title\"]').should('be.visible');\n// Preenche título do ticket com prefixo padrão\nconst ticketTitle = `TESTE DE AUTOMAÇÃO QA - ${category.nome} > ${subcategory} > ${priority.label}`;\ncy.get('input[id=\"title\"]').type(ticketTitle);\n// Selecionar categoria\ncy.contains('button', 'Select category').click();\ncy.get('[role=\"option\"]').contains(category.nome).click();\n// Selecionar subcategoria\ncy.contains('button', 'Select subcategory (optional)').click();\ncy.get('[role=\"option\"]').contains(subcategory).click();\n// Selecionar prioridade\ncy.contains('button', 'Select priority').click();\ncy.get('[role=\"dialog\"][data-state=\"open\"]', {\n  timeout: 15000\n}).should('exist').then($dialog => {\n  if ($dialog.css('pointer-events') === 'none') {\n    cy.wrap($dialog).invoke('css', 'pointer-events', 'auto');\n  }\n});\ncy.get('[role=\"option\"]').contains(priority.label).then($option => {\n  const style = window.getComputedStyle($option[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($option).invoke('css', 'pointer-events', 'auto');\n  }\n}).click({\n  force: true\n});\n// Verificar prioridade selecionada\ncy.get('button[role=\"combobox\"]').should('contain', priority.label);\n// Preencher descrição\nconst ticketDescription = `TESTE DE AUTOMAÇÃO QA - Ticket gerado automaticamente:\n\nCategoria: ${category.nome}\nSubcategoria: ${subcategory}\nPrioridade: ${priority.label} (${priority.value})\n\nData/hora: ${new Date().toLocaleString()}\nAmbiente: ${Cypress.browser.name} ${Cypress.browser.version}\n\nPassos para reprodução:\n1. Passo 1 do teste\n2. Passo 2 do teste\n\nResultado esperado:\n- O sistema deve comportar-se conforme especificação`;\ncy.get('textarea#description').should('exist').then($textarea => {\n  const style = window.getComputedStyle($textarea[0]);\n  if (style.pointerEvents === 'none') {\n    cy.wrap($textarea).invoke('css', 'pointer-events', 'auto');\n  }\n}).clear({\n  force: true\n}).type(ticketDescription, {\n  delay: 20,\n  force: true\n});\n// Criar ticket\ncy.contains('Create Ticket').click();\ncy.contains('Novo ticket criado:', {\n  timeout: 15000\n}).should('be.visible');\n// Voltar para a lista de tickets\ncy.get('body').then($body => {\n  if ($body.find('button:contains(\"Back to tickets\")').length) {\n    cy.contains('button', 'Back to tickets').click();\n  } else if ($body.find('a:contains(\"Tickets\")').length) {\n    cy.contains('a', 'Tickets').click();\n  }\n});",
              "err": {},
              "uuid": "3a7d7f96-217c-4958-9a3f-e4a86ae11267",
              "parentUUID": "8cbb7f75-fd48-40e5-af68-638f458014bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ebf40b5-22c4-4543-9175-ea85c13ea320",
            "95a96990-4641-4e0a-9594-813e79cc825d",
            "b1629ff6-f8bf-4bff-83f8-f0b89ffe771e",
            "c3fdf6c0-d4a0-4d34-9351-f0f3942a1084",
            "72ab8ab7-de47-40d2-87c7-1c7f46f63caa",
            "2b94a801-0e79-4832-9e25-705181db8b38",
            "ba4acac7-277e-4c32-9874-42ff5b27822b",
            "f7675b4f-f2b5-4d36-80bb-53681258f888",
            "3acb49f6-7938-415c-bf13-65efdc70ca05",
            "c3fbd6ad-539e-4605-af22-754e606eedf3",
            "8af5ed65-843e-4059-addf-d352192916bd",
            "a2859f9b-f95e-471b-bf77-4f648e923d72",
            "09fecbfc-7b63-414a-837e-3ac48b482512",
            "4a275366-07b4-4f01-818f-b8452c8b27c7",
            "e30e07e4-5a05-4ab5-86e0-36a1b53fb7f3",
            "b74a155e-bd40-429d-9d02-28d001fe02e7",
            "6cffaccb-ca24-494c-aea8-0e3547cde808",
            "60c5deb4-6272-4403-8da0-b8c7f3682cc9",
            "4bd9b368-7309-46ac-b708-d8940be8157e",
            "1dd82555-923a-43c7-80b9-47d93325441a",
            "0619553c-9f8b-436e-86fa-47bdc3464ae2",
            "b741b9fa-be4f-4653-97e7-4160f23bef76",
            "1c9c3b8c-bc68-42e3-b94b-1e10f8dec029",
            "93d99418-54a0-4f78-8de2-cf8da9d2b543",
            "a50a31fe-8574-4e75-a3ee-cad5c9344ac4",
            "58bc2b99-3ce7-47b5-9e1b-12a8117051b9",
            "1b44bc92-1d19-42cb-a2c0-4236cfaafb70",
            "c8a48cc5-d31a-447f-a1e0-899b48d20b3b",
            "d4d81f76-30fe-4182-8803-12cbec19c490",
            "2fba6ad2-0a94-4210-a170-42361e53f2ed",
            "2a12436d-c9d1-43f1-b8c2-3acedf59a4f1",
            "3128ec88-8b2e-4300-891a-9958aa9d61a0",
            "3a7d7f96-217c-4958-9a3f-e4a86ae11267"
          ],
          "failures": [
            "d1b990fa-2c19-4f37-9502-fcc8cbeea035",
            "e24d6cb4-650e-4beb-a30b-b31d729a8256",
            "f92f275f-7cb7-4887-85a0-5947a3529820",
            "0c00e3e3-6eea-45e4-b948-da18b3423fbf",
            "fbad01b9-b31d-432b-a3a6-e6091843af98",
            "68183fca-f9e8-403a-8008-6ded60339241",
            "5e341f35-7e08-4843-8be7-851a5a16869a",
            "bc7a9c4c-1420-40b7-a520-c1056338a1b5",
            "19fb41d1-2081-41cf-a51b-6bb6d1f0181b",
            "ed46821a-5a71-4d84-bc2a-ca499ef68d8e",
            "89b39852-0253-44cd-9de8-fae5945e3a31"
          ],
          "pending": [],
          "skipped": [],
          "duration": 927659,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}